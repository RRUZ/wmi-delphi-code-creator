namespace GetWMI_Info;
//--------------------------------------------------------------------------------------------------
//     This code was generated by the Wmi Delphi Code Creator http://theroadtodelphi.wordpress.com
//     Version: [VERSIONAPP] 
//
//
//
//     LIABILITY DISCLAIMER
//     THIS GENERATED CODE IS DISTRIBUTED "AS IS". NO WARRANTY OF ANY KIND IS EXPRESSED OR IMPLIED.
//     YOU USE IT AT YOUR OWN RISK. THE AUTHOR NOT WILL BE LIABLE FOR DATA LOSS,
//     DAMAGES AND LOSS OF PROFITS OR ANY OTHER KIND OF LOSS WHILE USING OR MISUSING THIS CODE.
//
//
//-------------------------------------------------------------------------------------------------
interface
uses
  System,
  System.Management,
  System.Text;

type
    ConsoleApp = class
    private
        class method Invoke_[WMICLASSNAME]_[WMIMETHOD](const WmiPath :string);
    public
        class method Main;
    end;

implementation

[WMIMETHODDESC]
class method ConsoleApp.Invoke_[WMICLASSNAME]_[WMIMETHOD](const WmiPath :string);
var
  classInstance  : ManagementObject;
  inParams       : ManagementBaseObject; 
  outParams      : ManagementBaseObject; 
begin
  classInstance  := new ManagementObject('[WMINAMESPACE]',WmiPath,nil);
  inParams       := classInstance.GetMethodParameters('[WMIMETHOD]');
[DELPHICODEINPARAMS]  
  outParams      := classInstance.InvokeMethod('[WMIMETHOD]', inParams ,nil);
[DELPHICODEOUTPARAMS]
end;


class method ConsoleApp.Main;
begin
 try
    Invoke_[WMICLASSNAME]_[WMIMETHOD]('[WMIPATH]');
 except on  E: Exception do
  Console.WriteLine('An error occurred while trying to execute the WMI method: '+E.ToString()+' Trace '+E.StackTrace );
 end;
 Console.WriteLine('Press Enter to exit');
 Console.Read();
end;


end.

